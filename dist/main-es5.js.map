{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","_snackBar","gameStatus","gameLives","gameTime","timeLeft","icons","subscriptionTimer","unsubscribe","level","iniTime","generateTasks","observeTimer","val","ans","condition","a","b","left","taskLeft","operator","right","taskRight","stopGame","nextLevel","sign","source","subscribe","noAnswer","subtr","Math","floor","numbers","Array","nums","sort","random","generateConditions","message","open","duration","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { Subscription, timer } from 'rxjs';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({ selector: 'app-root', templateUrl: './app.component.html', styleUrls: ['./app.component.css'] })\nexport class AppComponent {\n\n  // currect state of the game: 0 - no game, 1 - game started, 2 - game lost\n  gameStatus: number = 0;\n  gameLives: number = 0;\n  gameTime: number = 15;\n  iniTime: number;\n  timeLeft: number = 0;\n  subscriptionTimer: Subscription;\n  level: number;\n\n  icons: string[] = ['accessibility', 'account_balance', 'anchor', 'build', 'grade', 'leaderboard', 'pets', 'schedule', 'phone', 'create'];\n  nums: number[];\n\n  taskLeft: {left: number, operator: number, right: number};\n  taskRight: {left: number, operator: number, right: number};\n\n  constructor(private _snackBar: MatSnackBar) {}\n\n  public startGame(): void {\n    if(this.subscriptionTimer) this.subscriptionTimer.unsubscribe();\n    this.gameStatus = 1;\n    this.gameLives = 5;\n    this.level = 1;\n    this.iniTime = this.gameTime;\n    this.timeLeft = this.iniTime;\n\n    this.generateTasks();\n\n    this.observeTimer();\n  };\n\n  public stopGame(): void {\n    this.gameStatus = 0;\n    if(this.subscriptionTimer) this.subscriptionTimer.unsubscribe();\n  };\n\n  public getAnswer(val): void {\n    let ans;\n\n    var condition = {\n      0: (a, b) => a + b,\n      1: (a, b) => a - b,\n      2: (a, b) => a * b\n    }\n\n    let left = condition[this.taskLeft.operator](this.taskLeft.left, this.taskLeft.right);\n    let right = condition[this.taskRight.operator](this.taskRight.left, this.taskRight.right);\n\n    switch (val) {\n      case 'left':\n        ans = left < right;\n        break;\n      case 'right':\n        ans = left > right;\n        break;\n      default:\n        this.stopGame();\n        return;\n    }\n\n    this.nextLevel(ans);\n  }\n\n  public getSign(id: number): string {\n    let sign;\n    switch (id) {\n      case 0: sign = '+'; break\n      case 1: sign = '-'; break\n      case 2: sign = '*'; break\n      default: sign = 'error'; break;\n    }\n    return sign;\n  }\n\n  private observeTimer() {\n    const source = timer(0, 1000);\n    this.subscriptionTimer = source.subscribe(val => {\n      this.timeLeft = this.iniTime - val;\n      if(this.timeLeft < 1) this.nextLevel(true);\n    });\n  }\n\n  private nextLevel(noAnswer?: boolean): void {\n    this.level++;\n\n    this.subscriptionTimer.unsubscribe();\n\n    if(noAnswer) this.gameLives--;\n\n    let subtr = Math.floor(this.level/5);\n    this.iniTime = (this.gameTime - subtr > 5) ? this.gameTime - subtr : 5;\n\n    if(this.gameLives < 1) {\n      this.gameStatus = 2;  // game lost\n    } else {\n      this.generateTasks();\n      this.observeTimer();  // restart timer\n    }\n  }\n\n  private generateTasks(): void {\n    let numbers = [...Array(10).keys()];\n    this.nums = numbers.sort(()=>Math.random()-0.5);      // shuffle numbers\n    this.icons = this.icons.sort(()=>Math.random()-0.5);  // shuffle icons\n    this.generateConditions();\n  }\n\n  private generateConditions(): void {\n\n    let sign = Math.floor(Math.random() * 3);\n\n    this.taskLeft = {\n      left: this.nums[Math.floor(Math.random() * 10)],\n      operator: sign,\n      right: this.nums[Math.floor(Math.random() * 10)]\n    }\n\n    this.taskRight = {\n      left: this.nums[Math.floor(Math.random() * 10)],\n      operator: sign,\n      right: this.nums[Math.floor(Math.random() * 10)]\n    }\n  }\n\n  public showMessage(message: string) {\n    this._snackBar.open(message, 'Got ya', { duration: 2000 });\n  }\n\n\n}\n","<div class=\"container\">\n\n  <div class=\"top-container\">\n\n    <div *ngIf=\"gameStatus == 0\">\n      <button *ngIf=\"gameStatus == 0\" type=\"button\" name=\"button\" (click)=\"startGame()\">start game</button>\n      <p>Task:<br />Select the larger value between the left and right blocks.<br />You are given a limited time to perform calculations and selections.\n    </div>\n\n    <div *ngIf=\"gameStatus == 1\">\n      <button *ngIf=\"gameStatus == 1\" type=\"button\" name=\"button\" (click)=\"stopGame()\">stop game</button>\n      <p>Lives: <mat-icon *ngFor=\"let l of [].constructor(gameLives)\" [ngClass]=\"{'critical-health': gameLives < 3}\">favorite</mat-icon></p>\n      <p>Time: {{ timeLeft }}</p>\n      <p>Level: {{ level }}</p>\n      <p>Click on a <b>larger</b> value:</p>\n    </div>\n\n    <div *ngIf=\"gameStatus == 2\">\n      <p>Game over</p>\n      <p>Your level: {{ level }}</p>\n      <button *ngIf=\"gameStatus == 2\" type=\"button\" name=\"button\" (click)=\"startGame()\">start over</button>\n    </div>\n\n  </div>\n\n  <div *ngIf=\"gameStatus == 0\" class=\"mid-container\">\n    <div class=\"condition-block condition\" (click)=\"showMessage('First of all, start the game!')\">\n        <mat-icon>accessibility</mat-icon><span class=\"sign\">+</span><mat-icon>anchor</mat-icon>\n    </div>\n    <div class=\"condition-block\">?</div>\n    <div class=\"condition-block condition\" (click)=\"showMessage('First of all, start the game!')\">\n        <mat-icon>build</mat-icon><span class=\"sign\">+</span><mat-icon>phone</mat-icon>\n    </div>\n  </div>\n\n  <div *ngIf=\"gameStatus == 1\" class=\"mid-container\">\n    <div class=\"condition-block condition\" (click)=\"getAnswer('left')\">\n      <div *ngIf=\"taskLeft\">\n        <mat-icon>{{ icons[taskLeft.left] }}</mat-icon><span class=\"sign\">{{ getSign(taskLeft.operator) }}</span><mat-icon>{{ icons[taskLeft.right] }}</mat-icon>\n        <!-- {{ taskLeft.left }} {{ getSign(taskLeft.operator) }} {{ taskLeft.right }} -->\n      </div>\n    </div>\n    <div class=\"condition-block\">?</div>\n    <div class=\"condition-block condition\" (click)=\"getAnswer('right')\">\n      <div *ngIf=\"taskRight\">\n        <mat-icon>{{ icons[taskRight.left] }}</mat-icon><span class=\"sign\">{{ getSign(taskRight.operator) }}</span><mat-icon>{{ icons[taskRight.right] }}</mat-icon>\n        <!-- {{ taskRight.left }} {{ getSign(taskRight.operator) }} {{ taskRight.right }} -->\n      </div>\n    </div>\n  </div>\n\n  <div *ngIf=\"gameStatus == 0\" class=\"bot-container\">\n      <div *ngFor=\"let i of [].constructor(10); let n = index\" class=\"value-pair\">\n        <div class=\"value-pair-val\"><mat-icon>{{ icons[n] }}</mat-icon></div>\n        <div class=\"value-pair-val\">{{ n }}</div>\n      </div>\n  </div>\n\n  <div *ngIf=\"gameStatus == 1\" class=\"bot-container\">\n    <div *ngFor=\"let n of nums\" class=\"value-pair\">\n      <div class=\"value-pair-val\"><mat-icon>{{ icons[n] }}</mat-icon></div>\n      <div class=\"value-pair-val\">{{ n }}</div>\n    </div>\n  </div>\n\n\n</div>\n","import { BrowserModule }            from '@angular/platform-browser';\nimport { NgModule }                 from '@angular/core';\nimport { AppComponent }             from './app.component';\nimport { BrowserAnimationsModule }  from '@angular/platform-browser/animations';\nimport { MatIconModule }            from '@angular/material/icon';\nimport { MatSnackBarModule }        from '@angular/material/snack-bar';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatIconModule,\n    MatSnackBarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}